{"remainingRequest":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/FilterBarPop.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/FilterBarPop.vue","mtime":1568620289651},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    menu: {\n      type: Object\n    },\n    showDialog: {\n      type: Boolean,\n      default: true\n    },\n    hasTabHeader: {\n      type: Boolean,\n      default: true\n    },\n    filterTop: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      selectIndexTab: 0,\n      currentSelectIndex: 0,\n      sideMenus: {},\n      items: {},\n      column: '',\n      visible: false,\n      top: 1,\n      bgTop: 0,\n      range: {}\n    };\n  },\n  mounted: function mounted() {\n    this.bgTop = document.querySelector('.filterbar').offsetHeight + this.filterTop / 1;\n  },\n  watch: {\n    showDialog: function showDialog(v) {\n      this.visible = v;\n\n      if (v) {\n        //初始化数据\n        this.initData();\n      }\n    },\n    menu: function menu(m) {\n      //根据tabs数量计算列宽\n      this.column = '0 0 ' + 100 / m.tabs.length + '%'; //初始化数据\n\n      this.initData();\n    }\n  },\n  methods: {\n    //初始化数据\n    initData: function initData(tabIndex) {\n      var tmpTabIndx = 0;\n      tabIndex === undefined ? tmpTabIndx = this.menu.selectIndex : tmpTabIndx = tabIndex; //判断tabindex的范围是否在数组内\n\n      if (tmpTabIndx >= 0 && tmpTabIndx < this.menu.tabs.length) {\n        this.selectIndexTab = tmpTabIndx;\n      } else {\n        this.selectIndexTab = 0;\n      } //确认选中tab的一级列表\n\n\n      this.sideMenus = this.menu.tabs[this.selectIndexTab]; //如果当前选中tab是对应选中结果的tab\n      // debugger;\n\n      if (this.selectIndexTab == this.menu.selectIndex) {\n        this.currentSelectIndex = this.sideMenus.selectIndex;\n      } // else{\n      //   this.sideMenus.selectIndex = -1;\n      //   this.currentSelectIndex = -1;\n      // }\n      //判断是否包含二级列表，包含则赋值\n      //如果一级列表的选中状态正确，则查询二级列表\n\n\n      if (this.currentSelectIndex >= 0 && this.currentSelectIndex < this.sideMenus.detailList.length) {\n        //判断是否有二级列表\n        if (this.sideMenus.detailList[this.currentSelectIndex].list) {\n          this.items = this.sideMenus.detailList[this.currentSelectIndex];\n        } else {\n          //不显示二级列表\n          this.items = false;\n        }\n      } else {\n        //如果一级列表选中状态不正确，按第一项的的数据判断\n        //判断是否有二级列表\n        if (this.sideMenus.detailList[0].list) {\n          //显示空的二级列表\n          this.items = [];\n        } else {\n          //不显示二级列表\n          this.items = false;\n        }\n      }\n    },\n    //修改选项\n    changeSelect: function changeSelect(index) {\n      //记录tabIndex\n      this.menu.selectIndex = this.selectIndexTab; //记录一级列表选项\n\n      this.sideMenus.selectIndex = this.currentSelectIndex;\n\n      if (this.items) {\n        //确认二级列表选项\n        this.items.selectIndex = index; //显示名称\n\n        this.menu.name = this.items.list[this.items.selectIndex].name;\n        this.menu.value = this.items.list[this.items.selectIndex].value;\n      } else {\n        //显示名称\n        this.menu.name = this.sideMenus.detailList[this.sideMenus.selectIndex].name;\n        this.menu.value = this.sideMenus.detailList[this.sideMenus.selectIndex].value;\n      }\n\n      this.$emit('changeSelect');\n      this.closeDialog();\n    },\n    // 帅选修改选项\n    changeRangeSelect: function changeRangeSelect() {\n      this.menu.name = '筛选';\n\n      for (var i in this.range) {\n        if (Object.keys(this.range[i].value).length == 0) {\n          delete this.range[i];\n        }\n      }\n\n      this.menu.value = Object.keys(this.range).length > 0 ? this.range : '';\n      this.$emit('changeSelect');\n      this.closeDialog();\n    },\n    // 选择Tab菜单\n    clickTab: function clickTab(tab, index) {\n      if (index !== this.selectIndexTab) {\n        //根据选中的tab初始化数据\n        this.initData(index);\n        this.$emit('changeTab', {\n          tab: tab,\n          index: index\n        });\n      }\n    },\n    // 筛选方法\n    clickFilterbar: function clickFilterbar(v, I, i) {\n      v.detailList[i].selectIndex = i; // debugger\n\n      if (!this.range[I]) {\n        this.range[I] = {\n          name: v.name,\n          value: {}\n        };\n        this.range[I].value[i] = v.detailList[i].value;\n      } else {\n        if (!this.range[I].value[i]) {\n          this.range[I].value[i] = v.detailList[i].value;\n        } else {\n          delete this.range[I].value[i];\n          v.detailList[i].selectIndex = -1;\n        }\n      }\n    },\n    // 点击左侧列表\n    clickSidebar: function clickSidebar(v, i) {\n      if (this.currentSelectIndex !== i) {\n        this.currentSelectIndex = i; //存在二级列表\n\n        if (this.sideMenus.detailList[this.currentSelectIndex].list) {\n          this.items = this.sideMenus.detailList[this.currentSelectIndex];\n        } else {\n          //只有一级列表，记录选项，退出\n          this.changeSelect();\n        }\n\n        this.$emit('changeMainItem', {\n          v: v,\n          i: i\n        });\n      }\n    },\n    // 点击右侧列表\n    clickItem: function clickItem(v, i) {\n      //只有一级列表，记录选项，退出\n      this.changeSelect(i);\n    },\n    // 关闭弹框\n    closeDialog: function closeDialog() {\n      this.visible = false;\n      this.$emit('closeDialog');\n    },\n    // 提交已选内容\n    handleEnsure: function handleEnsure() {\n      this.changeRangeSelect();\n      this.$emit('changeMainItem', this.range); // this.closeDialog();\n    },\n    // 清除已选内容\n    handleClean: function handleClean() {\n      this.menu.tabs.map(function (item) {\n        item.detailList.map(function (_item) {\n          _item.selectIndex = -1;\n        });\n      });\n      this.range = {};\n    }\n  }\n  /**\n    TODOS:\n    1. 需要一个属性去辨别帅选项\n    2. 多选\n    3. 添加多选框\n   */\n\n};",{"version":3,"sources":["FilterBarPop.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAJA;AAQA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KARA;AAYA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAZA,GADA;AAiBA,EAAA,IAjBA,kBAiBA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CADA;AAEA,MAAA,kBAAA,EAAA,CAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA,EALA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,GAAA,EAAA,CAPA;AAQA,MAAA,KAAA,EAAA,CARA;AASA,MAAA,KAAA,EAAA;AATA,KAAA;AAWA,GA7BA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,KAAA,GAAA,QAAA,CAAA,aAAA,CAAA,YAAA,EAAA,YAAA,GAAA,KAAA,SAAA,GAAA,CAAA;AACA,GAhCA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,CADA,EACA;AACA,WAAA,OAAA,GAAA,CAAA;;AACA,UAAA,CAAA,EAAA;AACA;AACA,aAAA,QAAA;AACA;AACA,KAPA;AAQA,IAAA,IARA,gBAQA,CARA,EAQA;AACA;AACA,WAAA,MAAA,GAAA,SAAA,MAAA,CAAA,CAAA,IAAA,CAAA,MAAA,GAAA,GAAA,CAFA,CAGA;;AACA,WAAA,QAAA;AACA;AAbA,GAjCA;AAgDA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,QAFA,EAEA;AACA,UAAA,UAAA,GAAA,CAAA;AACA,MAAA,QAAA,KAAA,SAAA,GAAA,UAAA,GAAA,KAAA,IAAA,CAAA,WAAA,GAAA,UAAA,GAAA,QAAA,CAFA,CAGA;;AACA,UAAA,UAAA,IAAA,CAAA,IAAA,UAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AACA,aAAA,cAAA,GAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,cAAA,GAAA,CAAA;AACA,OARA,CASA;;;AACA,WAAA,SAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA,KAAA,cAAA,CAAA,CAVA,CAWA;AACA;;AACA,UAAA,KAAA,cAAA,IAAA,KAAA,IAAA,CAAA,WAAA,EAAA;AACA,aAAA,kBAAA,GAAA,KAAA,SAAA,CAAA,WAAA;AACA,OAfA,CAgBA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAA,KAAA,kBAAA,IAAA,CAAA,IAAA,KAAA,kBAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAAA,MAAA,EAAA;AACA;AACA,YAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,kBAAA,EAAA,IAAA,EAAA;AACA,eAAA,KAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,kBAAA,CAAA;AACA,SAFA,MAEA;AACA;AACA,eAAA,KAAA,GAAA,KAAA;AACA;AACA,OARA,MAQA;AAAA;AACA;AACA,YAAA,KAAA,SAAA,CAAA,UAAA,CAAA,CAAA,EAAA,IAAA,EAAA;AACA;AACA,eAAA,KAAA,GAAA,EAAA;AACA,SAHA,MAGA;AACA;AACA,eAAA,KAAA,GAAA,KAAA;AACA;AACA;AACA,KA1CA;AA2CA;AACA,IAAA,YA5CA,wBA4CA,KA5CA,EA4CA;AACA;AACA,WAAA,IAAA,CAAA,WAAA,GAAA,KAAA,cAAA,CAFA,CAGA;;AACA,WAAA,SAAA,CAAA,WAAA,GAAA,KAAA,kBAAA;;AACA,UAAA,KAAA,KAAA,EAAA;AACA;AACA,aAAA,KAAA,CAAA,WAAA,GAAA,KAAA,CAFA,CAGA;;AACA,aAAA,IAAA,CAAA,IAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,WAAA,EAAA,IAAA;AACA,aAAA,IAAA,CAAA,KAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,WAAA,EAAA,KAAA;AACA,OANA,MAMA;AACA;AACA,aAAA,IAAA,CAAA,IAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,SAAA,CAAA,WAAA,EAAA,IAAA;AACA,aAAA,IAAA,CAAA,KAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,SAAA,CAAA,WAAA,EAAA,KAAA;AACA;;AACA,WAAA,KAAA,CAAA,cAAA;AACA,WAAA,WAAA;AACA,KA9DA;AA+DA;AACA,IAAA,iBAhEA,+BAgEA;AACA,WAAA,IAAA,CAAA,IAAA,GAAA,IAAA;;AACA,WAAA,IAAA,CAAA,IAAA,KAAA,KAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,EAAA,MAAA,IAAA,CAAA,EAAA;AACA,iBAAA,KAAA,KAAA,CAAA,CAAA,CAAA;AACA;AACA;;AAEA,WAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,KAAA,EAAA,MAAA,GAAA,CAAA,GAAA,KAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,CAAA,cAAA;AACA,WAAA,WAAA;AACA,KA3EA;AA4EA;AACA,IAAA,QA7EA,oBA6EA,GA7EA,EA6EA,KA7EA,EA6EA;AACA,UAAA,KAAA,KAAA,KAAA,cAAA,EAAA;AACA;AACA,aAAA,QAAA,CAAA,KAAA;AACA,aAAA,KAAA,CAAA,WAAA,EAAA;AACA,UAAA,GAAA,EAAA,GADA;AAEA,UAAA,KAAA,EAAA;AAFA,SAAA;AAIA;AACA,KAtFA;AAuFA;AACA,IAAA,cAxFA,0BAwFA,CAxFA,EAwFA,CAxFA,EAwFA,CAxFA,EAwFA;AACA,MAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,WAAA,GAAA,CAAA,CADA,CAEA;;AACA,UAAA,CAAA,KAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA,CAAA,IAAA;AAAA,UAAA,IAAA,EAAA,CAAA,CAAA,IAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,aAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,KAAA;AACA,OAHA,MAGA;AACA,YAAA,CAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,KAAA;AACA,SAFA,MAEA;AACA,iBAAA,KAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,WAAA,GAAA,CAAA,CAAA;AACA;AACA;AACA,KAtGA;AAuGA;AACA,IAAA,YAxGA,wBAwGA,CAxGA,EAwGA,CAxGA,EAwGA;AACA,UAAA,KAAA,kBAAA,KAAA,CAAA,EAAA;AACA,aAAA,kBAAA,GAAA,CAAA,CADA,CAEA;;AACA,YAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,kBAAA,EAAA,IAAA,EAAA;AACA,eAAA,KAAA,GAAA,KAAA,SAAA,CAAA,UAAA,CAAA,KAAA,kBAAA,CAAA;AACA,SAFA,MAEA;AACA;AACA,eAAA,YAAA;AACA;;AACA,aAAA,KAAA,CAAA,gBAAA,EAAA;AACA,UAAA,CAAA,EAAA,CADA;AAEA,UAAA,CAAA,EAAA;AAFA,SAAA;AAIA;AACA,KAvHA;AAwHA;AACA,IAAA,SAzHA,qBAyHA,CAzHA,EAyHA,CAzHA,EAyHA;AACA;AACA,WAAA,YAAA,CAAA,CAAA;AACA,KA5HA;AA6HA;AACA,IAAA,WA9HA,yBA8HA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,aAAA;AACA,KAjIA;AAkIA;AACA,IAAA,YAnIA,0BAmIA;AACA,WAAA,iBAAA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,KAAA,EAFA,CAGA;AACA,KAvIA;AAwIA;AACA,IAAA,WAzIA,yBAyIA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,CAAA,CAAA;AACA,SAFA;AAGA,OAJA;AAKA,WAAA,KAAA,GAAA,EAAA;AACA;AAhJA;AAmJA;;;;;;;AAnMA,CAAA","sourcesContent":["<template>\n  <transition name=\"fade\">\n    <div class=\"filterbarpop-wrap\" v-if=\"visible\" :style=\"{'top': bgTop + 'px'}\">\n      <div class=\"filterbarpop-bg\" @click=\"closeDialog\" :style=\"{'top': bgTop + 'px'}\"></div>\n      <div class=\"filterbarpop\">\n        <div class=\"tab-bar\" v-show=\"hasTabHeader\">\n          <a href=\"javascript:;\" :style=\"{'flex': column}\" role=\"button\" @click=\"clickTab(tab, index)\" v-for=\"(tab, index) in menu.tabs\" :key=\"index\"\n            :class=\"{'selected': selectIndexTab == index}\"><span :class=\"tab.icon\"></span>{{tab.name}}</a>\n        </div>\n        <div class=\"main\">\n          <div class=\"main-sidebar\" :class=\"{'full-line': !items,'bg-style':items,'line-style':!items,}\">\n            <div v-if=\"menu.type !== 'filter'\" class=\"item\" @click=\"clickSidebar(sidemenu, index)\" v-for=\"(sidemenu, index) in sideMenus.detailList\" :key=\"index\"\n              :class=\"{'selected': currentSelectIndex == index}\">\n              <span :class=\"sidemenu.icon\"></span>{{ sidemenu.name }}\n            </div>\n            <div v-if=\"menu.type == 'filter'\" v-for=\"(sm, _index) in menu.tabs\">\n              <div class=\"filter-name\">{{sm.name}}</div>\n              <div class=\"filter-item\">\n                <span v-for=\"(sidemenu, index) in sm.detailList\" :key=\"index\" class=\"item-operation\" @click=\"clickFilterbar(sm, _index, index)\" :class=\"{'multi-selected': sidemenu.selectIndex == index}\">\n                {{ sidemenu.name }}\n                </span>\n              </div>\n            </div>\n            <div v-if=\"menu.type == 'filter'\" class=\"filter-btns\">\n              <a href=\"javascript:;\" role=\"button\" @click=\"handleClean\">取消</a>\n              <a href=\"javascript:;\" role=\"button\" @click=\"handleEnsure\">确认</a>\n            </div>\n          </div>\n          <div class=\"main-list line-style\" v-if=\"items\">\n            <span class=\"item\"  @click=\"clickItem(item, index)\" v-for=\"(item, index) in items.list\" :key=\"index\" :class=\"{'selected': currentSelectIndex == sideMenus.selectIndex && items.selectIndex == index}\">{{item.name}}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n \n<script>\n  export default {\n    props: {\n      menu: {\n        type: Object\n      },\n      showDialog: {\n        type: Boolean,\n        default: true\n      },\n      hasTabHeader: {\n        type: Boolean,\n        default: true\n      },\n      filterTop: {\n        type: String\n      }\n    },\n    data() {\n      return {\n        selectIndexTab: 0,\n        currentSelectIndex: 0,\n        sideMenus: {},\n        items: {},\n        column: '',\n        visible: false,\n        top: 1,\n        bgTop: 0,\n        range: {}\n      }\n    },\n    mounted() {\n      this.bgTop = document.querySelector('.filterbar').offsetHeight + this.filterTop / 1;\n    },\n    watch: {\n      showDialog(v) {\n        this.visible = v;\n        if (v) {\n          //初始化数据\n          this.initData();\n        }\n      },\n      menu(m) {\n        //根据tabs数量计算列宽\n        this.column = '0 0 ' + 100 / m.tabs.length + '%';\n        //初始化数据\n        this.initData();\n      }\n    },\n    methods: {\n      //初始化数据\n      initData(tabIndex) {\n        var tmpTabIndx = 0;\n        tabIndex === undefined ? tmpTabIndx = this.menu.selectIndex : tmpTabIndx = tabIndex\n        //判断tabindex的范围是否在数组内\n        if (tmpTabIndx >= 0 && tmpTabIndx < this.menu.tabs.length) {\n          this.selectIndexTab = tmpTabIndx;\n        } else {\n          this.selectIndexTab = 0;\n        }\n        //确认选中tab的一级列表\n        this.sideMenus = this.menu.tabs[this.selectIndexTab];\n        //如果当前选中tab是对应选中结果的tab\n        // debugger;\n        if (this.selectIndexTab == this.menu.selectIndex) {\n          this.currentSelectIndex = this.sideMenus.selectIndex;\n        }\n        // else{\n        //   this.sideMenus.selectIndex = -1;\n        //   this.currentSelectIndex = -1;\n        // }\n        //判断是否包含二级列表，包含则赋值\n        //如果一级列表的选中状态正确，则查询二级列表\n        if (this.currentSelectIndex >= 0 && this.currentSelectIndex < this.sideMenus.detailList.length) {\n          //判断是否有二级列表\n          if (this.sideMenus.detailList[this.currentSelectIndex].list) {\n            this.items = this.sideMenus.detailList[this.currentSelectIndex];\n          } else {\n            //不显示二级列表\n            this.items = false;\n          }\n        } else { //如果一级列表选中状态不正确，按第一项的的数据判断\n          //判断是否有二级列表\n          if (this.sideMenus.detailList[0].list) {\n            //显示空的二级列表\n            this.items = [];\n          } else {\n            //不显示二级列表\n            this.items = false;\n          }\n        }\n      },\n      //修改选项\n      changeSelect(index) {\n        //记录tabIndex\n        this.menu.selectIndex = this.selectIndexTab;\n        //记录一级列表选项\n        this.sideMenus.selectIndex = this.currentSelectIndex;\n        if (this.items) {\n          //确认二级列表选项\n          this.items.selectIndex = index;\n          //显示名称\n          this.menu.name = this.items.list[this.items.selectIndex].name;\n          this.menu.value = this.items.list[this.items.selectIndex].value;\n        } else {\n          //显示名称\n          this.menu.name = this.sideMenus.detailList[this.sideMenus.selectIndex].name;\n          this.menu.value = this.sideMenus.detailList[this.sideMenus.selectIndex].value;\n        }\n        this.$emit('changeSelect');\n        this.closeDialog();\n      },\n      // 帅选修改选项\n      changeRangeSelect() {\n        this.menu.name = '筛选';\n        for(var i in this.range){\n          if(Object.keys(this.range[i].value).length == 0){\n            delete this.range[i]\n          }\n        }\n \n        this.menu.value = Object.keys(this.range).length > 0 ? this.range : '';\n        this.$emit('changeSelect');\n        this.closeDialog();\n      },\n      // 选择Tab菜单\n      clickTab(tab, index) {\n        if (index !== this.selectIndexTab) {\n          //根据选中的tab初始化数据\n          this.initData(index);\n          this.$emit('changeTab', {\n            tab,\n            index\n          })\n        }\n      },\n      // 筛选方法\n      clickFilterbar(v, I, i) {\n        v.detailList[i].selectIndex = i;\n        // debugger\n        if(!this.range[I]){\n          this.range[I] = {name: v.name, value: {}};\n          this.range[I].value[i] = v.detailList[i].value;\n        } else {\n          if(!this.range[I].value[i]){\n            this.range[I].value[i] = v.detailList[i].value;\n          } else {\n            delete this.range[I].value[i];\n            v.detailList[i].selectIndex = -1;\n          }\n        }\n      },\n      // 点击左侧列表\n      clickSidebar(v, i) {\n        if (this.currentSelectIndex !== i) {\n          this.currentSelectIndex = i;\n          //存在二级列表\n          if (this.sideMenus.detailList[this.currentSelectIndex].list) {\n            this.items = this.sideMenus.detailList[this.currentSelectIndex];\n          } else {\n            //只有一级列表，记录选项，退出\n            this.changeSelect();\n          }\n          this.$emit('changeMainItem', {\n            v,\n            i\n          });\n        }\n      },\n      // 点击右侧列表\n      clickItem(v, i) {\n        //只有一级列表，记录选项，退出\n        this.changeSelect(i);\n      },\n      // 关闭弹框\n      closeDialog() {\n        this.visible = false;\n        this.$emit('closeDialog');\n      },\n      // 提交已选内容\n      handleEnsure() {\n        this.changeRangeSelect();\n        this.$emit('changeMainItem', this.range);\n        // this.closeDialog();\n      },\n      // 清除已选内容\n      handleClean() {\n        this.menu.tabs.map(item => {\n          item.detailList.map(_item => {\n            _item.selectIndex = -1;\n          })\n        });\n        this.range = {};\n      }\n    }\n  }\n  /**\n    TODOS:\n    1. 需要一个属性去辨别帅选项\n    2. 多选\n    3. 添加多选框\n   */\n</script>\n \n<style lang=\"scss\">\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: opacity .5s\n  }\n  .fade-enter,\n  .fade-leave-active {\n    opacity: 0\n  }\n  .filterbarpop-wrap {\n    position: fixed;\n    width: 100%;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    overflow: hidden;\n    max-height: 100%;\n    .filterbarpop-bg {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      background: rgba(0, 0, 0, .6);\n    }\n    .filterbarpop {\n      position: absolute;\n      width: 100%;\n      border-top: 1px solid #ccc;\n      .tab-bar {\n        width: 100%;\n        display: flex;\n        display: -ms-flexbox;\n        display: -moz-box;\n        display: -webkit-box;\n        display: -webkit-flex;\n        flex-directives: row;\n        -webkit-flex-direction: row;\n        align-items: center;\n        -webkit-align-items: center;\n        -webkit-box-align: center;\n        -moz-box-align: center;\n        -ms-flex-align: center;\n        height: 40px;\n        .selected {\n          border-bottom: 2px solid orange;\n          box-sizing: border-box;\n        }\n        a {\n          background: #fff;\n          height: 100%;\n          line-height: 40px;\n          text-decoration: none;\n          color: #323232;\n          text-align: center;\n        }\n      }\n      .main {\n        display: flex;\n        display: -webkit-flex;\n        flex-direction: row;\n        -webkit-flex-direction: row;\n        height: 250px;\n        background: #fff;\n        .main-sidebar {\n          flex: 0 0 50%;\n          overflow: auto;\n          width: 100%;\n        }\n        .full-line {\n          flex: 0 0 100%;\n          div {\n            text-align: left; // text-indent: 1.5em;\n          }\n        }\n        .item-operation {\n          display: inline-block;\n          padding: 10px 4px 10px 4px;\n          border: 1px solid rgb(91, 149, 255);\n          border-radius: 3px;\n          height: 0;\n          line-height: 1px;\n        }\n        .multi-selected {\n          background: rgb(91, 149, 255);\n          color: #fff !important;\n        }\n        .filter-item {\n          border-top: 1px solid #ccc;\n          border-bottom: 1px solid #ccc;\n          padding: 13px 0 5px 10px;\n          span {\n            margin-right: 8px;\n            margin-bottom: 8px;\n          }\n        }\n        .filter-name {\n          padding: 10px 0 10px 10px;\n        }\n        .filter-btns {\n          display: flex;\n          display: -webkit-flex;\n          flex-direction: row;\n          -webkit-flex-direction: row;\n          justify-content: space-around;\n          -webkit-box-pack: space-around;\n          -moz-box-pack: space-around;\n          -ms-flex-pack: space-around;\n          position: absolute;\n          bottom: -40px;\n          width: 100%;\n          line-height: 40px;\n          z-index: 100;\n          background: #fff;\n          a {\n            display: block;\n            width: 100%;\n            text-align: center;\n            text-decoration: none;\n            color: #ccc;\n            border-top: 1px solid #ccc;\n            &:last-child {\n              background: #39f;\n              color: #fff;\n            }\n          }\n        }\n        .main-list {\n          flex: 0 0 50%;\n          overflow: auto;\n          span:active {\n            background: #f5f5f5;\n          }\n        }\n        .line-style {\n          .item {\n            text-align: left;\n            margin-left: 10px;\n            padding-left: 15px;\n            border-bottom: 1px solid #ccc;\n            position: relative;\n            &.selected {\n              color: orange;\n              border-color: orange;\n              span {\n                color: orange;\n              }\n            }\n            .checkbox {\n              position: absolute;\n              right: 50px;\n              top: 10px;\n            }\n          }\n        }\n        .bg-style {\n          .item {\n            background-color: #f5f5f5;\n            &.selected {\n              background-color: #FFF;\n            }\n          }\n        }\n        .item {\n          display: inline-block;\n          height: 40px;\n          background: #fff;\n          line-height: 40px;\n          width: 100%;\n          text-decoration: none;\n          color: #444;\n          span {\n            font-size: 14px;\n            color: #888;\n            margin-right: 10px;\n            vertical-align: middle;\n          }\n          &:active {\n            color: #fff;\n          }\n        }\n      }\n    }\n  }\n</style>"],"sourceRoot":"src/components"}]}