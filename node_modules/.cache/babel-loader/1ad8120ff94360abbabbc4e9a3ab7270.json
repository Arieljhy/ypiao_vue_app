{"remainingRequest":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/vuex/store/getters.js","dependencies":[{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/vuex/store/getters.js","mtime":1568103959889},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//基于state数据的二次包装，常用于数据的筛选和多个数据的相关性计算\nimport state from '/states.js';\nexport default {\n  totalPrice: function totalPrice() {\n    var totalPrice = 0; // 计算总价\n\n    for (var i = 0; i < state.shopList.length; i++) {\n      totalPrice += parseInt(state.shopList[i].price * state.shopList[i].num * 100) / 100;\n    }\n\n    return totalPrice;\n  },\n  totalCount: function totalCount() {\n    var totalCount = 0; // 计算总数\n\n    for (var i = 0; i < state.shopList.length; i++) {\n      totalCount += parseInt(state.shopList[i].num);\n    }\n\n    return totalCount;\n  }\n};",{"version":3,"sources":["/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/vuex/store/getters.js"],"names":["state","totalPrice","i","shopList","length","parseInt","price","num","totalCount"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,eAAc;AACZC,EAAAA,UADY,wBACA;AACV,QAAIA,UAAU,GAAG,CAAjB,CADU,CACY;;AACtB,SAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACF,KAAK,CAACG,QAAN,CAAeC,MAA9B,EAAqCF,CAAC,EAAtC,EAAyC;AACvCD,MAAAA,UAAU,IAAII,QAAQ,CAACL,KAAK,CAACG,QAAN,CAAeD,CAAf,EAAkBI,KAAlB,GAAwBN,KAAK,CAACG,QAAN,CAAeD,CAAf,EAAkBK,GAA1C,GAA8C,GAA/C,CAAR,GAA4D,GAA1E;AACD;;AACD,WAAON,UAAP;AACD,GAPW;AAQZO,EAAAA,UARY,wBAQA;AACV,QAAIA,UAAU,GAAG,CAAjB,CADU,CACY;;AACtB,SAAI,IAAIN,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACF,KAAK,CAACG,QAAN,CAAeC,MAA9B,EAAqCF,CAAC,EAAtC,EAAyC;AACvCM,MAAAA,UAAU,IAAIH,QAAQ,CAACL,KAAK,CAACG,QAAN,CAAeD,CAAf,EAAkBK,GAAnB,CAAtB;AACD;;AACD,WAAOC,UAAP;AACD;AAdW,CAAd","sourcesContent":["//基于state数据的二次包装，常用于数据的筛选和多个数据的相关性计算\nimport state from '/states.js';\n \nexport default{\n  totalPrice(){\n    let totalPrice = 0;   // 计算总价\n    for(let i =0;i<state.shopList.length;i++){\n      totalPrice += parseInt(state.shopList[i].price*state.shopList[i].num*100)/100;\n    }\n    return totalPrice;\n  },\n  totalCount(){\n    let totalCount = 0;   // 计算总数\n    for(let i =0;i<state.shopList.length;i++){\n      totalCount += parseInt(state.shopList[i].num);\n    }\n    return totalCount;\n  }\n}"]}]}