{"remainingRequest":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/address_sele.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/address_sele.vue","mtime":1568083865907},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"cityPicker\",\n  data: function data() {\n    return {\n      address: [{\n        \"code\": \"11\",\n        \"name\": \"北京市\",\n        \"children\": [{\n          \"code\": \"1101\",\n          \"name\": \"市辖区\",\n          \"children\": [{\n            \"code\": \"110101\",\n            \"name\": \"东城区\"\n          }, {\n            \"code\": \"110102\",\n            \"name\": \"西城区\"\n          }]\n        }]\n      }, {\n        \"code\": \"11\",\n        \"name\": \"天津市\",\n        \"children\": [{\n          \"code\": \"1101\",\n          \"name\": \"市辖区\",\n          \"children\": [{\n            \"code\": \"110101\",\n            \"name\": \"12区\"\n          }, {\n            \"code\": \"110102\",\n            \"name\": \"34区\"\n          }]\n        }]\n      }],\n      currentTags: \"请选择\",\n      handler: function handler(e) {\n        e.preventDefault();\n      },\n      popupVisible: false,\n      province: '',\n      //省\n      city: '',\n      //市\n      county: '',\n      //县\n      provinceCode: '',\n      //省级代码\n      cityCode: '',\n      //市级代码\n      countyCode: '',\n      //县级代码\n      regionInit: false //禁止地区选择器自动初始化，picker组件会默认进行初始化，导致一进入页面就会默认选中一个初始3级地址\n\n    };\n  },\n  created: function created() {// 获取所有省市区\n    //     axios.get(\"/api/address\").then(res => {\n    //           if(res){\n    //               this.address = res          \n    //           }\n    //       })\n  },\n  methods: {\n    closeTouch: function closeTouch() {\n      document.getElementsByTagName('body')[0].addEventListener('touchmove', this.handler, {\n        passive: false\n      }); //阻止默认事件\n    },\n    openTouch: function openTouch() {\n      document.getElementsByTagName('body')[0].removeEventListener('touchmove', this.handler, {\n        passive: true\n      }); //打开默认事件\n    },\n    getProvinceArr: function getProvinceArr() {\n      var provinceArr = [];\n\n      if (this.address) {\n        this.address.forEach(function (item) {\n          var obj = {};\n          obj.name = item.name;\n          obj.code = item.code;\n          provinceArr.push(obj);\n        });\n      }\n\n      return provinceArr;\n    },\n    //遍历json，返回市级对象数组\n    getCityArr: function getCityArr(province) {\n      var cityArr = [];\n\n      if (this.address) {\n        this.address.forEach(function (item) {\n          if (item.name === province) {\n            item.children.forEach(function (args) {\n              var obj = {};\n              obj.name = args.name;\n              obj.code = args.code;\n              cityArr.push(obj);\n            });\n          }\n        });\n      }\n\n      return cityArr;\n    },\n    //遍历json，返回县级对象数组\n    getCountyArr: function getCountyArr(province, city) {\n      var countyArr = [];\n\n      if (this.address) {\n        this.address.forEach(function (item) {\n          if (item.name === province) {\n            item.children.forEach(function (args) {\n              if (args.name === city) {\n                args.children.forEach(function (param) {\n                  var obj = {};\n                  obj.name = param.name;\n                  obj.code = param.code;\n                  countyArr.push(obj);\n                });\n              }\n            });\n          }\n        });\n      }\n\n      return countyArr;\n    },\n    showPopup: function showPopup() {\n      this.popupVisible = true;\n      this.closeTouch();\n    },\n    cancelChoose: function cancelChoose() {\n      this.popupVisible = false;\n      this.openTouch();\n    },\n    confirmChoose: function confirmChoose() {\n      var vals = this.$refs.familyAddress.getValues();\n      this.getFamilyAddress(vals);\n      this.popupVisible = false;\n      this.openTouch();\n    },\n    getFamilyAddress: function getFamilyAddress(vals) {\n      this.province = vals[0].name;\n      this.city = vals[1].name;\n      this.county = vals[2].name;\n      this.provinceCode = vals[0].code;\n      this.cityCode = vals[1].code;\n      this.countyCode = vals[0].code;\n      this.currentTags = this.province + this.city + this.county;\n    },\n    onValuesChange: function onValuesChange(picker, values) {\n      if (this.regionInit) {\n        var provinceArr = this.getProvinceArr();\n        picker.setSlotValues(0, provinceArr);\n        var cityArr = this.getCityArr(values[0].name);\n        picker.setSlotValues(1, cityArr);\n        var countyArr = this.getCountyArr(values[0].name, values[1].name);\n        picker.setSlotValues(2, countyArr);\n      } else {\n        this.regionInit = true;\n      }\n    }\n  },\n  computed: {\n    addressList: function addressList() {\n      if (this.address) {\n        var provinceArr = this.getProvinceArr();\n        var cityArr = this.getCityArr(\"北京市\");\n        var countyArr = this.getCountyArr(\"北京市\", \"市辖区\");\n        return [{\n          flex: 1,\n          values: provinceArr,\n          //省份数组\n          className: 'slot1',\n          textAlign: 'center'\n        }, {\n          divider: true,\n          content: '-',\n          className: 'slot2'\n        }, {\n          flex: 1,\n          values: cityArr,\n          className: 'slot3',\n          textAlign: 'center'\n        }, {\n          divider: true,\n          content: '-',\n          className: 'slot4'\n        }, {\n          flex: 1,\n          values: countyArr,\n          className: 'slot5',\n          textAlign: 'center'\n        }];\n      }\n\n      return [];\n    }\n  }\n};",{"version":3,"sources":["address_sele.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"form-item\">\n\n    <mt-cell title=\"家庭地址\" is-link  @click.native=\"showPopup\">\n      <span>{{currentTags}}</span>\n    </mt-cell>\n\n    <mt-popup\n        v-model=\"popupVisible\"\n        position=\"bottom\"\n        :modal = \"true\"\n        :closeOnClickModal = \"false\"\n        popup-transition=\"popup-fade\"\n        style=\"width : 100%;\">\n        <mt-picker\n          :slots=\"addressList\"\n          :show-toolbar=\"true\"\n          ref=\"familyAddress\"\n          :itemHeight = 44\n          valueKey=\"name\"\n          @change = \"onValuesChange\"\n        >\n            <slot>\n                <div class=\"toolbar\">\n                    <span class=\"cancel-container\" @click=\"cancelChoose\">取消</span>\n                    <span class=\"confirm-container\" @click=\"confirmChoose\">确认</span>\n                </div>\n            </slot>\n        </mt-picker>\n\n    </mt-popup>\n  </div>\n</template>\n<script>\n\nexport default {\n    name: \"cityPicker\",\n    data(){\n        return {\n                address:[\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"北京市\",\n                    \"children\": [\n                      {\n                          \"code\": \"1101\",\n                          \"name\": \"市辖区\",\n                          \"children\": [\n                            {\n                              \"code\": \"110101\",\n                              \"name\": \"东城区\"\n                            },\n                            {\n                              \"code\": \"110102\",\n                               \"name\": \"西城区\"\n                            }\n                          ]\n                      }\n                    ]\n                  },\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"天津市\",\n                    \"children\": [\n                      {\n                        \"code\": \"1101\",\n                        \"name\": \"市辖区\",\n                        \"children\": [\n                          {\n                            \"code\": \"110101\",\n                            \"name\": \"12区\"\n                          }, {\n                             \"code\": \"110102\",\n                            \"name\": \"34区\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ],\n                    currentTags : \"请选择\",\n                    handler: function(e){\n                    e.preventDefault()\n                    },\n                    popupVisible:false,\n\n                    province:'',//省\n                    city:'',//市\n                    county:'',//县\n                    provinceCode:'',//省级代码\n                    cityCode:'', //市级代码\n                    countyCode:'',//县级代码\n                    regionInit:false//禁止地区选择器自动初始化，picker组件会默认进行初始化，导致一进入页面就会默认选中一个初始3级地址\n            }\n        \n        },\n      created(){\n        // 获取所有省市区\n    //     axios.get(\"/api/address\").then(res => {\n    //           if(res){\n    //               this.address = res          \n    //           }\n    //       })\n      },\n        methods: {\n          closeTouch () {\n            document.getElementsByTagName('body')[0].addEventListener('touchmove', this.handler, {passive:false})//阻止默认事件\n          },\n          openTouch () {\n            document.getElementsByTagName('body')[0].removeEventListener('touchmove', this.handler, {passive:true})//打开默认事件\n          },\n          getProvinceArr() {\n            let provinceArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                let obj = {};\n                obj.name = item.name;\n                obj.code = item.code;\n                provinceArr.push(obj);\n              });\n            }\n            return provinceArr;\n          },\n          //遍历json，返回市级对象数组\n          getCityArr(province) {\n            let cityArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    let obj = {};\n                    obj.name = args.name;\n                    obj.code = args.code;\n                    cityArr.push(obj);\n                  });\n                }\n              });\n            }\n            return cityArr;\n          },\n          //遍历json，返回县级对象数组\n          getCountyArr(province,city){\n            let countyArr = [];\n            if(this.address){\n              this.address.forEach(function(item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    if (args.name === city) {\n                      args.children.forEach(function (param) {\n                        let obj = {};\n                        obj.name = param.name;\n                        obj.code = param.code;\n                        countyArr.push(obj);\n                      })\n                    }\n                  });\n                }\n              })\n            }\n            return countyArr;\n          },\n          showPopup(){\n            this.popupVisible = true\n            this.closeTouch();\n          },\n          cancelChoose(){\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          confirmChoose(){\n            let vals = this.$refs.familyAddress.getValues()\n            this.getFamilyAddress(vals)\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          getFamilyAddress(vals){\n            this.province = vals[0].name\n            this.city = vals[1].name\n            this.county = vals[2].name\n            this.provinceCode = vals[0].code\n            this.cityCode = vals[1].code\n            this.countyCode = vals[0].code\n            this.currentTags = this.province + this.city + this.county\n          },\n          onValuesChange(picker, values) {\n            if (this.regionInit){\n              let provinceArr = this.getProvinceArr();\n              picker.setSlotValues(0,provinceArr);\n              let cityArr = this.getCityArr(values[0].name);\n              picker.setSlotValues(1,cityArr);\n              let countyArr = this.getCountyArr(values[0].name,values[1].name);\n              picker.setSlotValues(2,countyArr);\n            }else {\n              this.regionInit = true;\n            }\n          }\n        },\n        computed:{\n          addressList : function(){\n            if(this.address){\n              let provinceArr = this.getProvinceArr();\n              let cityArr = this.getCityArr(\"北京市\");\n              let countyArr = this.getCountyArr(\"北京市\",\"市辖区\");\n              return [\n                {\n                  flex: 1,\n                  values: provinceArr, //省份数组\n                  className: 'slot1',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot2'\n                },\n                {\n                  flex: 1,\n                  values: cityArr,\n                  className: 'slot3',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot4'\n                },\n                {\n                  flex: 1,\n                  values: countyArr,\n                  className: 'slot5',\n                  textAlign: 'center'\n                }\n              ]\n            }\n            return []\n          }\n        }\n    }\n    </script>\n<style scoped lang=\"scss\">\n  .toolbar{\n    width : 100%;\n    height: 300px;\n    display: flex;\n    text-align: center;\n    background: #F7F7F7;\n    border-bottom: 1px solid #EEE;\n    span{\n      flex : 1;\n      font-size : 16px;\n      color : #26a2ff;\n      line-height: 44px;\n    }\n  }\n</style>"],"sourceRoot":"src/components"}]}