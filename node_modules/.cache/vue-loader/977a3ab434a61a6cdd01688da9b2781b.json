{"remainingRequest":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/address_sele.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/src/components/address_sele.vue","mtime":1568083865907},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jihongyu/Documents/GitHub/ypiao_vue_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    name: \"cityPicker\",\n    data(){\n        return {\n                address:[\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"北京市\",\n                    \"children\": [\n                      {\n                          \"code\": \"1101\",\n                          \"name\": \"市辖区\",\n                          \"children\": [\n                            {\n                              \"code\": \"110101\",\n                              \"name\": \"东城区\"\n                            },\n                            {\n                              \"code\": \"110102\",\n                               \"name\": \"西城区\"\n                            }\n                          ]\n                      }\n                    ]\n                  },\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"天津市\",\n                    \"children\": [\n                      {\n                        \"code\": \"1101\",\n                        \"name\": \"市辖区\",\n                        \"children\": [\n                          {\n                            \"code\": \"110101\",\n                            \"name\": \"12区\"\n                          }, {\n                             \"code\": \"110102\",\n                            \"name\": \"34区\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ],\n                    currentTags : \"请选择\",\n                    handler: function(e){\n                    e.preventDefault()\n                    },\n                    popupVisible:false,\n\n                    province:'',//省\n                    city:'',//市\n                    county:'',//县\n                    provinceCode:'',//省级代码\n                    cityCode:'', //市级代码\n                    countyCode:'',//县级代码\n                    regionInit:false//禁止地区选择器自动初始化，picker组件会默认进行初始化，导致一进入页面就会默认选中一个初始3级地址\n            }\n        \n        },\n      created(){\n        // 获取所有省市区\n    //     axios.get(\"/api/address\").then(res => {\n    //           if(res){\n    //               this.address = res          \n    //           }\n    //       })\n      },\n        methods: {\n          closeTouch () {\n            document.getElementsByTagName('body')[0].addEventListener('touchmove', this.handler, {passive:false})//阻止默认事件\n          },\n          openTouch () {\n            document.getElementsByTagName('body')[0].removeEventListener('touchmove', this.handler, {passive:true})//打开默认事件\n          },\n          getProvinceArr() {\n            let provinceArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                let obj = {};\n                obj.name = item.name;\n                obj.code = item.code;\n                provinceArr.push(obj);\n              });\n            }\n            return provinceArr;\n          },\n          //遍历json，返回市级对象数组\n          getCityArr(province) {\n            let cityArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    let obj = {};\n                    obj.name = args.name;\n                    obj.code = args.code;\n                    cityArr.push(obj);\n                  });\n                }\n              });\n            }\n            return cityArr;\n          },\n          //遍历json，返回县级对象数组\n          getCountyArr(province,city){\n            let countyArr = [];\n            if(this.address){\n              this.address.forEach(function(item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    if (args.name === city) {\n                      args.children.forEach(function (param) {\n                        let obj = {};\n                        obj.name = param.name;\n                        obj.code = param.code;\n                        countyArr.push(obj);\n                      })\n                    }\n                  });\n                }\n              })\n            }\n            return countyArr;\n          },\n          showPopup(){\n            this.popupVisible = true\n            this.closeTouch();\n          },\n          cancelChoose(){\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          confirmChoose(){\n            let vals = this.$refs.familyAddress.getValues()\n            this.getFamilyAddress(vals)\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          getFamilyAddress(vals){\n            this.province = vals[0].name\n            this.city = vals[1].name\n            this.county = vals[2].name\n            this.provinceCode = vals[0].code\n            this.cityCode = vals[1].code\n            this.countyCode = vals[0].code\n            this.currentTags = this.province + this.city + this.county\n          },\n          onValuesChange(picker, values) {\n            if (this.regionInit){\n              let provinceArr = this.getProvinceArr();\n              picker.setSlotValues(0,provinceArr);\n              let cityArr = this.getCityArr(values[0].name);\n              picker.setSlotValues(1,cityArr);\n              let countyArr = this.getCountyArr(values[0].name,values[1].name);\n              picker.setSlotValues(2,countyArr);\n            }else {\n              this.regionInit = true;\n            }\n          }\n        },\n        computed:{\n          addressList : function(){\n            if(this.address){\n              let provinceArr = this.getProvinceArr();\n              let cityArr = this.getCityArr(\"北京市\");\n              let countyArr = this.getCountyArr(\"北京市\",\"市辖区\");\n              return [\n                {\n                  flex: 1,\n                  values: provinceArr, //省份数组\n                  className: 'slot1',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot2'\n                },\n                {\n                  flex: 1,\n                  values: cityArr,\n                  className: 'slot3',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot4'\n                },\n                {\n                  flex: 1,\n                  values: countyArr,\n                  className: 'slot5',\n                  textAlign: 'center'\n                }\n              ]\n            }\n            return []\n          }\n        }\n    }\n    ",{"version":3,"sources":["address_sele.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"address_sele.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"form-item\">\n\n    <mt-cell title=\"家庭地址\" is-link  @click.native=\"showPopup\">\n      <span>{{currentTags}}</span>\n    </mt-cell>\n\n    <mt-popup\n        v-model=\"popupVisible\"\n        position=\"bottom\"\n        :modal = \"true\"\n        :closeOnClickModal = \"false\"\n        popup-transition=\"popup-fade\"\n        style=\"width : 100%;\">\n        <mt-picker\n          :slots=\"addressList\"\n          :show-toolbar=\"true\"\n          ref=\"familyAddress\"\n          :itemHeight = 44\n          valueKey=\"name\"\n          @change = \"onValuesChange\"\n        >\n            <slot>\n                <div class=\"toolbar\">\n                    <span class=\"cancel-container\" @click=\"cancelChoose\">取消</span>\n                    <span class=\"confirm-container\" @click=\"confirmChoose\">确认</span>\n                </div>\n            </slot>\n        </mt-picker>\n\n    </mt-popup>\n  </div>\n</template>\n<script>\n\nexport default {\n    name: \"cityPicker\",\n    data(){\n        return {\n                address:[\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"北京市\",\n                    \"children\": [\n                      {\n                          \"code\": \"1101\",\n                          \"name\": \"市辖区\",\n                          \"children\": [\n                            {\n                              \"code\": \"110101\",\n                              \"name\": \"东城区\"\n                            },\n                            {\n                              \"code\": \"110102\",\n                               \"name\": \"西城区\"\n                            }\n                          ]\n                      }\n                    ]\n                  },\n                  {\n                    \"code\": \"11\",\n                    \"name\": \"天津市\",\n                    \"children\": [\n                      {\n                        \"code\": \"1101\",\n                        \"name\": \"市辖区\",\n                        \"children\": [\n                          {\n                            \"code\": \"110101\",\n                            \"name\": \"12区\"\n                          }, {\n                             \"code\": \"110102\",\n                            \"name\": \"34区\"\n                          }\n                        ]\n                      }\n                    ]\n                  }\n                ],\n                    currentTags : \"请选择\",\n                    handler: function(e){\n                    e.preventDefault()\n                    },\n                    popupVisible:false,\n\n                    province:'',//省\n                    city:'',//市\n                    county:'',//县\n                    provinceCode:'',//省级代码\n                    cityCode:'', //市级代码\n                    countyCode:'',//县级代码\n                    regionInit:false//禁止地区选择器自动初始化，picker组件会默认进行初始化，导致一进入页面就会默认选中一个初始3级地址\n            }\n        \n        },\n      created(){\n        // 获取所有省市区\n    //     axios.get(\"/api/address\").then(res => {\n    //           if(res){\n    //               this.address = res          \n    //           }\n    //       })\n      },\n        methods: {\n          closeTouch () {\n            document.getElementsByTagName('body')[0].addEventListener('touchmove', this.handler, {passive:false})//阻止默认事件\n          },\n          openTouch () {\n            document.getElementsByTagName('body')[0].removeEventListener('touchmove', this.handler, {passive:true})//打开默认事件\n          },\n          getProvinceArr() {\n            let provinceArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                let obj = {};\n                obj.name = item.name;\n                obj.code = item.code;\n                provinceArr.push(obj);\n              });\n            }\n            return provinceArr;\n          },\n          //遍历json，返回市级对象数组\n          getCityArr(province) {\n            let cityArr = [];\n            if(this.address){\n              this.address.forEach(function (item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    let obj = {};\n                    obj.name = args.name;\n                    obj.code = args.code;\n                    cityArr.push(obj);\n                  });\n                }\n              });\n            }\n            return cityArr;\n          },\n          //遍历json，返回县级对象数组\n          getCountyArr(province,city){\n            let countyArr = [];\n            if(this.address){\n              this.address.forEach(function(item) {\n                if (item.name === province) {\n                  item.children.forEach(function (args) {\n                    if (args.name === city) {\n                      args.children.forEach(function (param) {\n                        let obj = {};\n                        obj.name = param.name;\n                        obj.code = param.code;\n                        countyArr.push(obj);\n                      })\n                    }\n                  });\n                }\n              })\n            }\n            return countyArr;\n          },\n          showPopup(){\n            this.popupVisible = true\n            this.closeTouch();\n          },\n          cancelChoose(){\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          confirmChoose(){\n            let vals = this.$refs.familyAddress.getValues()\n            this.getFamilyAddress(vals)\n            this.popupVisible = false;\n            this.openTouch();\n          },\n          getFamilyAddress(vals){\n            this.province = vals[0].name\n            this.city = vals[1].name\n            this.county = vals[2].name\n            this.provinceCode = vals[0].code\n            this.cityCode = vals[1].code\n            this.countyCode = vals[0].code\n            this.currentTags = this.province + this.city + this.county\n          },\n          onValuesChange(picker, values) {\n            if (this.regionInit){\n              let provinceArr = this.getProvinceArr();\n              picker.setSlotValues(0,provinceArr);\n              let cityArr = this.getCityArr(values[0].name);\n              picker.setSlotValues(1,cityArr);\n              let countyArr = this.getCountyArr(values[0].name,values[1].name);\n              picker.setSlotValues(2,countyArr);\n            }else {\n              this.regionInit = true;\n            }\n          }\n        },\n        computed:{\n          addressList : function(){\n            if(this.address){\n              let provinceArr = this.getProvinceArr();\n              let cityArr = this.getCityArr(\"北京市\");\n              let countyArr = this.getCountyArr(\"北京市\",\"市辖区\");\n              return [\n                {\n                  flex: 1,\n                  values: provinceArr, //省份数组\n                  className: 'slot1',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot2'\n                },\n                {\n                  flex: 1,\n                  values: cityArr,\n                  className: 'slot3',\n                  textAlign: 'center'\n                },\n                {\n                  divider: true,\n                  content: '-',\n                  className: 'slot4'\n                },\n                {\n                  flex: 1,\n                  values: countyArr,\n                  className: 'slot5',\n                  textAlign: 'center'\n                }\n              ]\n            }\n            return []\n          }\n        }\n    }\n    </script>\n<style scoped lang=\"scss\">\n  .toolbar{\n    width : 100%;\n    height: 300px;\n    display: flex;\n    text-align: center;\n    background: #F7F7F7;\n    border-bottom: 1px solid #EEE;\n    span{\n      flex : 1;\n      font-size : 16px;\n      color : #26a2ff;\n      line-height: 44px;\n    }\n  }\n</style>"]}]}